image: hipay/gitlab-ci-base:jessie

variables:
  PORT_WEB: 80
  PROJECT_NAME_TEST_MG2_1: ${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}-1
  PROJECT_NAME_TEST_MG2_2: ${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}-2

stages:
 - build-test-1
 - test-1
# - build-test-2
# - test-2
 - clean-stack
 - analysis
 - build
 - deploy
 - sync

#########################
####  TEMPLATE      ####
########################

.test_template: &test_definition
  allow_failure: false
  before_script:
    - sed -i -e "s/{PORT_WEB\}/$PORT_WEB/" ./bin/docker/conf/test/mage.env.sample
    - sed -i -e "s/{SMTP_LINK\}/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_smtp/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{ACTIVE_METHODS\}/$ACTIVE_METHODS/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{GITHUB_API_TOKEN\}/$GITHUB_TOKEN/" ./bin/docker/conf/test/auth.env.sample
    - sed -i -e "s/{GITLAB_API_TOKEN\}/$GITLAB_API_TOKEN/" ./bin/docker/conf/test/auth.env.sample
    - sed -i -e "s/{MAGE_ACCOUNT_PUBLIC_KEY\}/$MAGE_ACCOUNT_PUBLIC_KEY/" ./bin/docker/conf/test/auth.env.sample
    - sed -i -e "s/{MAGE_ACCOUNT_PRIVATE_KEY\}/$MAGE_ACCOUNT_PRIVATE_KEY/" ./bin/docker/conf/test/auth.env.sample
    - sed -i "s/$(echo "{BRANCH}" | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $CI_COMMIT_REF_NAME | sed -e 's/[\/&]/\\&/g')/g" ./bin/docker/conf/test/module.env.sample
    - sed -i -e "s/{DB_HOST\}/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_database/" ./bin/docker/conf/test/mage.env.sample
    - sed -i -e "s/{MAGENTO_URL\}/http:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}-web/" ./bin/docker/conf/test/mage.env.sample
    - sed -i -e "s/{MAGENTO_URL_SECURE\}/https:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}-web/" ./bin/docker/conf/test/mage.env.sample
  tags:
    - pi-commerce-no-overlay
  artifacts:
    paths:
      - bin/tests/errors
    when: always

build-test-2-1-10:
  stage: build-test-1
  script:
    - docker-compose -f docker-compose.test.yml build
  tags:
    - pi-commerce-no-overlay

casperjs-2-1-10:
  <<: *test_definition
  stage: test-1
  script:
    - docker-compose -p $PROJECT_NAME_TEST_MG2_1 -f docker-compose.test.yml stop
    - docker-compose -p $PROJECT_NAME_TEST_MG2_1 -f docker-compose.test.yml rm -fv
    - docker-compose -p $PROJECT_NAME_TEST_MG2_1 -f docker-compose.test.yml up -d
    - sleep 900
    - docker-compose -p $PROJECT_NAME_TEST_MG2_1 -f docker-compose.test.yml logs
    - curl --retry 10 --retry-delay 20 -v http:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}-web/
    - sh bin/tests/casper_run_circle.sh http:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}-web
  after_script:
    - /tools/clean-job.sh $PROJECT_NAME_TEST_MG2_1 docker-compose.test.yml magento2 ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

#build-test-2-2-4:
#  stage: build-test-2
#  script:
#    - chmod u+x bin/docker/images/generate_dockerfile.sh
#    - ./bin/docker/images/generate_dockerfile.sh 2.2.4
#    - docker-compose -f docker-compose.test-2.2.4.yml build
#  tags:
#    - pi-commerce-no-overlay
#
#casperjs-2-2-4:
#  <<: *test_definition
#  stage: test-2
#  script:
#    - chmod u+x bin/docker/images/generate_dockerfile.sh
#    - ./bin/docker/images/generate_dockerfile.sh 2.2.4
#    - docker-compose -p $PROJECT_NAME_TEST_MG2_2 -f docker-compose.test-2.2.4.yml stop
#    - docker-compose -p $PROJECT_NAME_TEST_MG2_2 -f docker-compose.test-2.2.4.yml rm -fv
#    - docker-compose -p $PROJECT_NAME_TEST_MG2_2 -f docker-compose.test-2.2.4.yml up -d
#    - sleep 666
#    - docker-compose -p $PROJECT_NAME_TEST_MG2_2 -f docker-compose.test.yml logs
#    - curl --retry 10 --retry-delay 20 -v http:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_web/
#    - sh bin/tests/casper_run_circle.sh http:\/\/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_web
#  after_script:
#    - /tools/clean-job.sh $PROJECT_NAME_TEST_MG2_2 docker-compose.test-2.2.4.yml magento2 ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}-2.2.4

clean-stack-test:
  stage: clean-stack
  script:
    - echo "Clean remaining containers, network and images"
  after_script:
    - /tools/clean-job.sh $PROJECT_NAME_TEST_MG2_1 docker-compose.test.yml magento2 ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
#    - /tools/clean-job.sh $PROJECT_NAME_TEST_MG2_2 docker-compose.test-2.2.4.yml magento2 ${DOCKER_STACK}-${DOCKER_SERVICE}_web-2.2.4:${CI_COMMIT_REF_SLUG}
  tags:
    - pi-commerce-no-overlay
  when: always

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: $SONAR_URL
    SONAR_ANALYSIS_MODE: preview
    SONAR_TOKEN: $SONAR_LOGIN
  script:
    - /usr/bin/sonar-scanner-run.sh
  tags:
    - pi-commerce-no-overlay

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: $SONAR_URL
    SONAR_ANALYSIS_MODE: "publish"
    SONAR_TOKEN: $SONAR_LOGIN
  script:
    - unset CI_BUILD_REF && /usr/bin/sonar-scanner-run.sh
  tags:
    - pi-commerce-no-overlay

build:
  stage: build
  before_script:
    - /tools/docker-rmi.sh ${REGISTRY_URL}/${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
  script:
    - docker-compose -f docker-compose.acceptance.yml build
    - docker-compose -f docker-compose.acceptance.yml push
  after_script:
    - docker rmi ${REGISTRY_URL}/${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
  tags:
    - pi-commerce-no-overlay

deploy2recette:
  stage: deploy
  before_script:
    - sed -i -e "s/{PORT_WEB\}/$PORT_WEB/" ./bin/docker/conf/acceptance/mage.env.sample
    - sed -i -e "s/{SMTP_LINK\}/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_smtp/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{ACTIVE_METHODS\}/$ACTIVE_METHODS/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{GITHUB_API_TOKEN\}/$GITHUB_TOKEN/" ./bin/docker/conf/acceptance/auth.env.sample
    - sed -i -e "s/{GITLAB_API_TOKEN\}/$GITLAB_API_TOKEN/" ./bin/docker/conf/acceptance/auth.env.sample
    - sed -i -e "s/{MAGE_ACCOUNT_PUBLIC_KEY\}/$MAGE_ACCOUNT_PUBLIC_KEY/" ./bin/docker/conf/acceptance/auth.env.sample
    - sed -i -e "s/{MAGE_ACCOUNT_PRIVATE_KEY\}/$MAGE_ACCOUNT_PRIVATE_KEY/" ./bin/docker/conf/acceptance/auth.env.sample
    - sed -i "s/$(echo "{BRANCH}" | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $CI_COMMIT_REF_NAME | sed -e 's/[\/&]/\\&/g')/g" ./bin/docker/conf/acceptance/module.env.sample
    - sed -i -e "s/{DB_HOST\}/${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_JOB_ID}_database/" ./bin/docker/conf/acceptance/mage.env.sample
    - sed -i -e "s/{MAGENTO_URL\}/http:\/\/${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.hipay-pos-platform.com/" ./bin/docker/conf/acceptance/mage.env.sample
    - sed -i -e "s/{MAGENTO_URL_SECURE\}/https:\/\/${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.hipay-pos-platform.com/" ./bin/docker/conf/acceptance/mage.env.sample
    # Substitute env variables which doesn't exists on the distant machine
    - /tools/substitute-env-var.sh docker-compose.acceptance.yml
    # Change path for relative path to environment files
    - sed -i -e "s|bin/docker/conf/acceptance/hipay.env.sample|hipay.env.sample|g" docker-compose.acceptance.yml
    - sed -i -e "s|bin/docker/conf/acceptance/auth.env.sample|auth.env.sample|g" docker-compose.acceptance.yml
    - sed -i -e "s|bin/docker/conf/acceptance/mage.env.sample|mage.env.sample|g" docker-compose.acceptance.yml
    - sed -i -e "s|bin/docker/conf/acceptance/module.env.sample|module.env.sample|g" docker-compose.acceptance.yml
  script:
    - bash /tools/deployToDockerMachine.sh -e ./bin/docker/conf/acceptance/hipay.env.sample -e ./bin/docker/conf/acceptance/auth.env.sample -e ./bin/docker/conf/acceptance/mage.env.sample -e ./bin/docker/conf/acceptance/module.env.sample -s docker-compose.acceptance.yml -n $DOCKER_STACK-$DOCKER_SERVICE-$CI_COMMIT_REF_SLUG
  allow_failure: true
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http:\/\/${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.hipay-pos-platform.com/
    on_stop: stop_review
  tags:
    - pi-commerce-no-overlay

stop_review:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker stack rm $DOCKER_STACK-$DOCKER_SERVICE-$CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

sync:
  stage: sync
  script:
  - git clone --mirror https://$GITLAB_USER:$GITLAB_PASSWORD@gitlab.hipay.org/pi-ecommerce/hipay-fullservice-sdk-magento2.git
  - cd hipay-fullservice-sdk-magento2.git
  - git push --mirror https://$GITHUB_USER:$GITHUB_PASSWORD@github.com/hipay/hipay-fullservice-sdk-magento2.git
  allow_failure: true
